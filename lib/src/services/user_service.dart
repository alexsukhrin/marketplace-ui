import 'dart:convert';
import 'package:flutter/foundation.dart';
import '../config/api_config.dart';
import 'token_manager.dart';

/// –ü—Ä–∏–∫–ª–∞–¥ —Å–µ—Ä–≤—ñ—Å—É —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –∑–∞–ø–∏—Ç–∏
class UserService {
  /// –û—Ç—Ä–∏–º—É—î –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  static Future<Map<String, dynamic>?> getCurrentUser() async {
    try {
      final response = await AuthenticatedHttpClient.get(
        Uri.parse('${ApiConfig.baseUrl}/api/users/me/'),
      );

      if (response.statusCode == 200) {
        final userData = jsonDecode(response.body);
        if (kDebugMode) {
          print('üë§ UserService: –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ—Ç—Ä–∏–º–∞–Ω–æ');
        }
        return userData;
      } else if (response.statusCode == 401) {
        if (kDebugMode) {
          print('üîê UserService: –¢–æ–∫–µ–Ω –Ω–µ –≤–∞–ª—ñ–¥–Ω–∏–π, –ø–æ—Ç—Ä—ñ–±–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è');
        }
        return null;
      } else {
        if (kDebugMode) {
          print('‚ùå UserService: –ü–æ–º–∏–ª–∫–∞ ${response.statusCode}');
        }
        throw Exception('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      }
    } catch (e) {
      if (kDebugMode) {
        print('üí• UserService: Exception: $e');
      }
      rethrow;
    }
  }

  /// –û–Ω–æ–≤–ª—é—î –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  static Future<bool> updateUserProfile(Map<String, dynamic> userData) async {
    try {
      final response = await AuthenticatedHttpClient.put(
        Uri.parse('${ApiConfig.baseUrl}/api/users/me/'),
        body: jsonEncode(userData),
      );

      if (response.statusCode == 200) {
        if (kDebugMode) {
          print('‚úÖ UserService: –ü—Ä–æ—Ñ—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ');
        }
        return true;
      } else {
        if (kDebugMode) {
          print('‚ùå UserService: –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ${response.statusCode}');
        }
        return false;
      }
    } catch (e) {
      if (kDebugMode) {
        print('üí• UserService: Exception: $e');
      }
      return false;
    }
  }

  /// –°—Ç–≤–æ—Ä—é—î —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —ñ—Å–Ω—É—é—á–∏–π endpoint)
  static Future<void> createUserRole(Map<String, bool> role) async {
    try {
      final response = await AuthenticatedHttpClient.post(
        Uri.parse(ApiConfig.usersCreate),
        body: jsonEncode(role),
      );

      if (response.statusCode == 200 || response.statusCode == 201) {
        if (kDebugMode) {
          print('‚úÖ UserService: –†–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞');
        }
      } else {
        if (kDebugMode) {
          print('‚ùå UserService: –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ–ª—ñ ${response.statusCode}');
        }
        throw Exception('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      }
    } catch (e) {
      if (kDebugMode) {
        print('üí• UserService: Exception –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ä–æ–ª—ñ: $e');
      }
      rethrow;
    }
  }
} 